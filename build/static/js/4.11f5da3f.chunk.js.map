{"version":3,"sources":["assets/arrow_back.svg","components/Navigation/Navigation.tsx","components/Grid/Grid.module.scss","components/Navigation/Navigation.module.scss","components/Grid/index.ts","components/Navigation/index.ts","features/residents/Residents/ResidentsPage.module.scss","features/residents/Residents/Resident.const.ts","features/residents/Residents/ResidentsPage.tsx","components/Grid/Grid.tsx"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","d","SvgArrowBack","_ref","svgRef","title","titleId","props","width","height","viewBox","ref","undefined","id","ForwardRef","Navigation","onBack","className","cn","styles","navigation","IconButton","navigationButton","Icon","BackIcon","aria-label","onClick","navigationTitle","React","memo","module","exports","RESIDENT_COLUMNS","label","type","connect","state","ownProps","match","params","planet","planets","planetById","residents","residentsIds","map","residentById","filter","Boolean","dispatch","fetchPlanet","planetId","fetchPlanetRequest","fetchResidents","residentIds","fetchResidentListRequest","history","useEffect","goBack","useCallback","container","name","Grid","table","columns","data","actions","hasActions","grid","gridRowHeader","column","gridColumnHeader","gridColumn_alignRight","row","GridItem","onRowClick","gridRow","gridRow_selectable","gridColumn","gridActions","action","ActionItem","onActionClick","event","stopPropagation","gridActionItem","invert"],"mappings":"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","file":"static/js/4.11f5da3f.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20.016 11.016v1.969h-12.188l5.578 5.625-1.406 1.406-8.016-8.016 8.016-8.016 1.406 1.406-5.578 5.625h12.188z\"\n});\n\nfunction SvgArrowBack(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"arrow_back\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowBack);\nexport default __webpack_public_path__ + \"static/media/arrow_back.db05affc.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\nimport IconButton from \"../IconButton/IconButton\";\nimport styles from \"./Navigation.module.scss\";\nimport cn from \"classnames\";\nimport { ReactComponent as BackIcon } from \"assets/arrow_back.svg\";\ninterface HeaderProps {\n  title: string;\n  onBack?: () => void;\n  className?: string;\n}\nfunction Navigation(props: HeaderProps) {\n  let { title, onBack, className } = props;\n  return (\n    <div className={cn(styles.navigation, className)}>\n      {onBack ? (\n        <IconButton\n          className={styles.navigationButton}\n          Icon={BackIcon}\n          title=\"Back\"\n          aria-label=\"Back\"\n          onClick={onBack}\n        />\n      ) : null}\n      <h1 className={styles.navigationTitle}>{title}</h1>\n    </div>\n  );\n}\n\nexport default React.memo(Navigation);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"Grid_grid__24j1p\",\"gridColumn\":\"Grid_gridColumn__3DX3P\",\"gridColumnHeader\":\"Grid_gridColumnHeader__37RjF\",\"gridColumn_alignRight\":\"Grid_gridColumn_alignRight__1QaqY\",\"gridRow\":\"Grid_gridRow__16rTm\",\"gridActions\":\"Grid_gridActions__3kmCi\",\"gridActionItem\":\"Grid_gridActionItem__1AXOQ\",\"gridRow_selectable\":\"Grid_gridRow_selectable__1dRvR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"Navigation_navigation__1EgxP\",\"navigationTitle\":\"Navigation_navigationTitle__61kMe\",\"navigationButton\":\"Navigation_navigationButton__Wmxmk\"};","export { default } from \"./Grid\";\nexport * from \"./Grid\";\nexport * from \"./Grid.types\";\n","export { default } from \"./Navigation\";\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ResidentsPage_container__1nQB1\",\"table\":\"ResidentsPage_table__2C1Sh\",\"navigation\":\"ResidentsPage_navigation__2Lcqb\"};","import { GridColumn } from \"components/Grid\";\n\nexport const RESIDENT_COLUMNS: GridColumn[] = [\n  { key: \"name\", label: \"Name\", type: \"string\" },\n  { key: \"height\", label: \"Height\", type: \"number\" },\n  { key: \"mass\", label: \"Mass\", type: \"number\" },\n  { key: \"hair_color\", label: \"Hair Color\", type: \"string\" },\n  { key: \"skin_color\", label: \"Skin Color\", type: \"string\" },\n  { key: \"eye_color\", label: \"Eue Color\", type: \"string\" },\n  { key: \"birth_year\", label: \"Birth Year\", type: \"string\" },\n  { key: \"gender\", label: \"Gender\", type: \"string\" },\n];\n","import React, { useCallback, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport Grid from \"components/Grid\";\nimport Navigation from \"components/Navigation\";\nimport { fetchPlanetRequest } from \"store/features/planets/PlanetsActions\";\nimport { Planet } from \"store/features/planets/PlanetsModel\";\nimport { fetchResidentListRequest } from \"store/features/residents/ResidentsActions\";\nimport { Resident } from \"store/features/residents/ResidentsModel\";\nimport { RootStoreState } from \"store/rootModel\";\nimport styles from \"./ResidentsPage.module.scss\";\nimport { RESIDENT_COLUMNS } from \"./Resident.const\";\n\ninterface RouteProps extends RouteComponentProps<{ id: string }> {}\n\ninterface ResidentsProps extends RouteProps {\n  fetchResidents: (ids: string[]) => any;\n  fetchPlanet: (id: string) => any;\n  residents: Resident[];\n  planet: Planet;\n}\n\nfunction ResidentsPage({\n  match,\n  planet,\n  history,\n  fetchPlanet,\n  fetchResidents,\n  residents,\n}: ResidentsProps) {\n  useEffect(() => {\n    if (!planet) {\n      const id = match.params.id;\n      fetchPlanet(id);\n    } else {\n      if (residents.length !== planet.residentsIds.length) {\n        fetchResidents(planet.residentsIds);\n      }\n    }\n  }, [fetchResidents, residents, fetchPlanet, planet, match]);\n\n  const goBack = useCallback(() => history.goBack(), [history]);\n\n  return (\n    <div className={styles.container}>\n      <Navigation\n        className={styles.navigation}\n        onBack={goBack}\n        title={planet ? `Residents for ${planet.name}` : \"Residents\"}\n      />\n\n      <Grid\n        className={styles.table}\n        columns={RESIDENT_COLUMNS}\n        data={residents}\n      />\n    </div>\n  );\n}\n\nconst mapStateToProps = (state: RootStoreState, ownProps: RouteProps) => {\n  const id = ownProps.match.params.id;\n  const planet = state.planets.planetById[id];\n  let residents: Resident[] = [];\n  if (planet) {\n    residents = planet.residentsIds\n      .map((id) => state.residents.residentById[id])\n      .filter(Boolean);\n  }\n  return { planet, residents };\n};\n\nconst mapDispatchToProps = (dispatch: Function) => {\n  return {\n    fetchPlanet: (planetId: string) => dispatch(fetchPlanetRequest(planetId)),\n    fetchResidents: (residentIds: string[]) =>\n      dispatch(fetchResidentListRequest(residentIds)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ResidentsPage);\n","import React, { useCallback } from \"react\";\nimport cn from \"classnames\";\nimport IconButton from \"../IconButton\";\nimport styles from \"./Grid.module.scss\";\nimport { GridAction, GridColumn, GridProps, TableElement } from \"./Grid.types\";\n\nfunction Grid<C extends TableElement>(props: GridProps<C>) {\n  const { columns, className, data, onClick, actions = [] } = props;\n  const hasActions = actions.length > 0;\n  return (\n    <table className={cn(styles.grid, className)}>\n      <thead>\n        <tr className={styles.gridRowHeader}>\n          {columns.map((column) => (\n            <th\n              className={cn(styles.gridColumnHeader, {\n                [styles.gridColumn_alignRight]: column.type === \"number\",\n              })}\n              key={column.key}\n            >\n              {column.label}\n            </th>\n          ))}\n          {hasActions && <th className={styles.gridColumnHeader}>Actions</th>}\n        </tr>\n      </thead>\n      <tbody>\n        {data.map((row) => (\n          <GridItem\n            key={row.id}\n            actions={actions}\n            columns={columns}\n            onClick={onClick}\n            row={row}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\ninterface GridItemProps {\n  onClick?: (id: string) => void;\n  columns: GridColumn[];\n  row: any & {\n    id: string;\n  };\n  actions: GridAction[];\n}\n\nfunction GridItem(props: GridItemProps) {\n  const { row, onClick, columns, actions } = props;\n  const onRowClick = useCallback(() => onClick && onClick(row.id), [\n    row.id,\n    onClick,\n  ]);\n\n  return (\n    <tr\n      className={cn(styles.gridRow, { [styles.gridRow_selectable]: !!onClick })}\n      onClick={onRowClick}\n    >\n      {columns.map((column) => (\n        <td\n          className={cn(styles.gridColumn, {\n            [styles.gridColumn_alignRight]: column.type === \"number\",\n          })}\n          key={column.key}\n        >\n          {row[column.key]}\n        </td>\n      ))}\n      <td className={styles.gridActions}>\n        {actions.map((action) => (\n          <ActionItem\n            key={action.id}\n            Icon={action.Icon}\n            onClick={action.onClick}\n            label={action.label}\n            id={row.id}\n          />\n        ))}\n      </td>\n    </tr>\n  );\n}\n\ninterface ActionItemProps extends GridAction {}\n\nfunction ActionItem(props: ActionItemProps) {\n  const { onClick, id, label, Icon } = props;\n  const onActionClick = useCallback(\n    (event) => {\n      event.stopPropagation();\n      onClick(id);\n    },\n    [id, onClick]\n  );\n  return (\n    <IconButton\n      className={styles.gridActionItem}\n      Icon={Icon}\n      title={label}\n      onClick={onActionClick}\n      invert={true}\n    />\n  );\n}\n\nexport default React.memo(Grid);\n"],"sourceRoot":""}