{"version":3,"sources":["assets/arrow_back.svg","components/Navigation/Navigation.tsx","components/Grid/Grid.module.scss","components/Navigation/Navigation.module.scss","features/planets/PlanetDetailsPage/PlanetDetailsPage.module.scss","features/planets/PlanetDetailsPage/PlanetsDetailsPage.const.ts","features/planets/PlanetDetailsPage/PlanetDetailsPage.tsx","components/Grid/Grid.tsx"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","d","SvgArrowBack","_ref","svgRef","title","titleId","props","width","height","viewBox","ref","undefined","id","ForwardRef","Navigation","onBack","className","cn","styles","navigation","IconButton","navigationButton","Icon","BackIcon","aria-label","onClick","navigationTitle","React","memo","module","exports","PLANET_DETAILS_COLUMNS","label","type","connect","state","ownProps","match","params","planet","planets","planetById","dispatch","fetchPlanetDetails","fetchPlanetRequest","history","useEffect","data","useMemo","goBack","useCallback","container","name","Grid","table","columns","actions","hasActions","grid","gridRowHeader","map","column","gridColumnHeader","gridColumn_alignRight","row","GridItem","onRowClick","gridRow","gridRow_selectable","gridColumn","gridActions","action","ActionItem","onActionClick","event","stopPropagation","gridActionItem","invert"],"mappings":"kMAAA,SAASA,IAA2Q,OAA9PA,EAAWC,OAAOC,QAAU,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcN,OAAOQ,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQL,EAAOK,GAAOD,EAAOC,IAAY,OAAOL,IAA2BS,MAAMC,KAAMR,WAEhT,SAASS,EAAyBP,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAAkEC,EAAKJ,EAAnED,EAEzF,SAAuCI,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,GAAI,IAA2DC,EAAKJ,EAA5DD,EAAS,GAAQa,EAAaf,OAAOgB,KAAKV,GAAqB,IAAKH,EAAI,EAAGA,EAAIY,EAAWV,OAAQF,IAAOI,EAAMQ,EAAWZ,GAAQW,EAASG,QAAQV,IAAQ,IAAaL,EAAOK,GAAOD,EAAOC,IAAQ,OAAOL,EAFxMgB,CAA8BZ,EAAQQ,GAAuB,GAAId,OAAOmB,sBAAuB,CAAE,IAAIC,EAAmBpB,OAAOmB,sBAAsBb,GAAS,IAAKH,EAAI,EAAGA,EAAIiB,EAAiBf,OAAQF,IAAOI,EAAMa,EAAiBjB,GAAQW,EAASG,QAAQV,IAAQ,GAAkBP,OAAOQ,UAAUa,qBAAqBX,KAAKJ,EAAQC,KAAgBL,EAAOK,GAAOD,EAAOC,IAAU,OAAOL,EAMne,IAAIoB,EAAqB,gBAAoB,OAAQ,CACnDC,EAAG,iHAGL,SAASC,EAAaC,EAAMC,GAC1B,IAAIC,EAAQF,EAAKE,MACbC,EAAUH,EAAKG,QACfC,EAAQhB,EAAyBY,EAAM,CAAC,QAAS,YAErD,OAAoB,gBAAoB,MAAO1B,EAAS,CACtD+B,MAAO,GACPC,OAAQ,GACRC,QAAS,YACTC,IAAKP,EACL,kBAAmBE,GAClBC,QAAkBK,IAAVP,EAAmC,gBAAoB,QAAS,CACzEQ,GAAIP,GACH,cAAgBD,EAAqB,gBAAoB,QAAS,CACnEQ,GAAIP,GACHD,GAAS,KAAML,GAGpB,IAAIc,EAA0B,aAAiBZ,GAChC,ICrBf,SAASa,EAAWR,GAAqB,IACjCF,EAA6BE,EAA7BF,MAAOW,EAAsBT,EAAtBS,OAAQC,EAAcV,EAAdU,UACrB,OACE,sBAAKA,UAAWC,IAAGC,IAAOC,WAAYH,GAAtC,UACGD,EACC,cAACK,EAAA,EAAD,CACEJ,UAAWE,IAAOG,iBAClBC,KAAMC,EACNnB,MAAM,OACNoB,aAAW,OACXC,QAASV,IAET,KACJ,oBAAIC,UAAWE,IAAOQ,gBAAtB,SAAwCtB,OAK/BuB,QAAMC,KAAKd,I,oBC3B1Be,EAAOC,QAAU,CAAC,KAAO,mBAAmB,WAAa,yBAAyB,iBAAmB,+BAA+B,sBAAwB,oCAAoC,QAAU,sBAAsB,YAAc,0BAA0B,eAAiB,6BAA6B,mBAAqB,mC,oBCA3UD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,gBAAkB,oCAAoC,iBAAmB,uC,oBCAvID,EAAOC,QAAU,CAAC,UAAY,qCAAqC,MAAQ,iCAAiC,WAAa,wC,qJCC5GC,EAAuC,CAClD,CAAE/C,IAAK,OAAQgD,MAAO,OAAQC,KAAM,UACpC,CAAEjD,IAAK,kBAAmBgD,MAAO,kBAAmBC,KAAM,UAC1D,CAAEjD,IAAK,iBAAkBgD,MAAO,iBAAkBC,KAAM,UACxD,CAAEjD,IAAK,WAAYgD,MAAO,WAAYC,KAAM,UAC5C,CAAEjD,IAAK,UAAWgD,MAAO,eAAWC,KAAM,UAC1C,CAAEjD,IAAK,UAAWgD,MAAO,UAAWC,KAAM,UAC1C,CAAEjD,IAAK,UAAWgD,MAAO,UAAWC,KAAM,UAC1C,CAAEjD,IAAK,gBAAiBgD,MAAO,gBAAiBC,KAAM,WC0CxD,IAkBeC,eAlBS,SACtBC,EACAC,GAEA,IAAMxB,EAAKwB,EAASC,MAAMC,OAAO1B,GACjC,MAAO,CAAE2B,OAAQJ,EAAMK,QAAQC,WAAW7B,OAGjB,SACzB8B,EACAN,GAEA,IAAMxB,EAAKwB,EAASC,MAAMC,OAAO1B,GACjC,MAAO,CACL+B,mBAAoB,kBAAMD,EAASE,YAAmBhC,QAI3CsB,EAnDf,YAIwB,IAHtBS,EAGqB,EAHrBA,mBACAJ,EAEqB,EAFrBA,OACAM,EACqB,EADrBA,QAEAC,qBAAU,WACHP,GACHI,MAED,CAACA,EAAoBJ,IAExB,IAAMQ,EAAOC,mBAAQ,WACnB,OAAOT,EAAS,CAACA,GAAU,KAC1B,CAACA,IAEEU,EAASC,uBAAY,kBAAML,EAAQI,WAAU,CAACJ,IAEpD,OACE,sBAAK7B,UAAWE,IAAOiC,UAAvB,UACE,cAACrC,EAAA,EAAD,CACEE,UAAWE,IAAOC,WAClBf,MAAOmC,EAASA,EAAOa,KAAO,aAC9BrC,OAAQkC,IAEV,cAACI,EAAA,EAAD,CACErC,UAAWE,IAAOoC,MAClBC,QAASxB,EACTgB,KAAMA,W,8GCxCd,SAASM,EAA6B/C,GAAsB,IAClDiD,EAAoDjD,EAApDiD,QAASvC,EAA2CV,EAA3CU,UAAW+B,EAAgCzC,EAAhCyC,KAAMtB,EAA0BnB,EAA1BmB,QADuB,EACGnB,EAAjBkD,eADc,MACJ,GADI,EAEnDC,EAAaD,EAAQ1E,OAAS,EACpC,OACE,wBAAOkC,UAAWC,IAAGC,IAAOwC,KAAM1C,GAAlC,UACE,gCACE,qBAAIA,UAAWE,IAAOyC,cAAtB,UACGJ,EAAQK,KAAI,SAACC,GAAD,OACX,oBACE7C,UAAWC,IAAGC,IAAO4C,iBAAR,eACV5C,IAAO6C,sBAAwC,WAAhBF,EAAO5B,OAF3C,SAMG4B,EAAO7B,OAFH6B,EAAO7E,QAKfyE,GAAc,oBAAIzC,UAAWE,IAAO4C,iBAAtB,0BAGnB,gCACGf,EAAKa,KAAI,SAACI,GAAD,OACR,cAACC,EAAD,CAEET,QAASA,EACTD,QAASA,EACT9B,QAASA,EACTuC,IAAKA,GAJAA,EAAIpD,YAqBrB,SAASqD,EAAS3D,GAAuB,IAC/B0D,EAAmC1D,EAAnC0D,IAAKvC,EAA8BnB,EAA9BmB,QAAS8B,EAAqBjD,EAArBiD,QAASC,EAAYlD,EAAZkD,QACzBU,EAAahB,uBAAY,kBAAMzB,GAAWA,EAAQuC,EAAIpD,MAAK,CAC/DoD,EAAIpD,GACJa,IAGF,OACE,qBACET,UAAWC,IAAGC,IAAOiD,QAAR,eAAoBjD,IAAOkD,qBAAuB3C,IAC/DA,QAASyC,EAFX,UAIGX,EAAQK,KAAI,SAACC,GAAD,OACX,oBACE7C,UAAWC,IAAGC,IAAOmD,WAAR,eACVnD,IAAO6C,sBAAwC,WAAhBF,EAAO5B,OAF3C,SAMG+B,EAAIH,EAAO7E,MAFP6E,EAAO7E,QAKhB,oBAAIgC,UAAWE,IAAOoD,YAAtB,SACGd,EAAQI,KAAI,SAACW,GAAD,OACX,cAACC,EAAD,CAEElD,KAAMiD,EAAOjD,KACbG,QAAS8C,EAAO9C,QAChBO,MAAOuC,EAAOvC,MACdpB,GAAIoD,EAAIpD,IAJH2D,EAAO3D,YAcxB,SAAS4D,EAAWlE,GAAyB,IACnCmB,EAA6BnB,EAA7BmB,QAASb,EAAoBN,EAApBM,GAAIoB,EAAgB1B,EAAhB0B,MAAOV,EAAShB,EAATgB,KACtBmD,EAAgBvB,uBACpB,SAACwB,GACCA,EAAMC,kBACNlD,EAAQb,KAEV,CAACA,EAAIa,IAEP,OACE,cAACL,EAAA,EAAD,CACEJ,UAAWE,IAAO0D,eAClBtD,KAAMA,EACNlB,MAAO4B,EACPP,QAASgD,EACTI,QAAQ,IAKClD,QAAMC,KAAKyB","file":"static/js/6.ce235760.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20.016 11.016v1.969h-12.188l5.578 5.625-1.406 1.406-8.016-8.016 8.016-8.016 1.406 1.406-5.578 5.625h12.188z\"\n});\n\nfunction SvgArrowBack(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"arrow_back\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowBack);\nexport default __webpack_public_path__ + \"static/media/arrow_back.db05affc.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\nimport IconButton from \"../IconButton/IconButton\";\nimport styles from \"./Navigation.module.scss\";\nimport cn from \"classnames\";\nimport { ReactComponent as BackIcon } from \"assets/arrow_back.svg\";\ninterface HeaderProps {\n  title: string;\n  onBack?: () => void;\n  className?: string;\n}\nfunction Navigation(props: HeaderProps) {\n  let { title, onBack, className } = props;\n  return (\n    <div className={cn(styles.navigation, className)}>\n      {onBack ? (\n        <IconButton\n          className={styles.navigationButton}\n          Icon={BackIcon}\n          title=\"Back\"\n          aria-label=\"Back\"\n          onClick={onBack}\n        />\n      ) : null}\n      <h1 className={styles.navigationTitle}>{title}</h1>\n    </div>\n  );\n}\n\nexport default React.memo(Navigation);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"Grid_grid__24j1p\",\"gridColumn\":\"Grid_gridColumn__3DX3P\",\"gridColumnHeader\":\"Grid_gridColumnHeader__37RjF\",\"gridColumn_alignRight\":\"Grid_gridColumn_alignRight__1QaqY\",\"gridRow\":\"Grid_gridRow__16rTm\",\"gridActions\":\"Grid_gridActions__3kmCi\",\"gridActionItem\":\"Grid_gridActionItem__1AXOQ\",\"gridRow_selectable\":\"Grid_gridRow_selectable__1dRvR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"Navigation_navigation__1EgxP\",\"navigationTitle\":\"Navigation_navigationTitle__61kMe\",\"navigationButton\":\"Navigation_navigationButton__Wmxmk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PlanetDetailsPage_container__1geg6\",\"table\":\"PlanetDetailsPage_table__1Lr9o\",\"navigation\":\"PlanetDetailsPage_navigation__3t9uh\"};","import { GridColumn } from \"components/Grid\";\n\nexport const PLANET_DETAILS_COLUMNS: GridColumn[] = [\n  { key: \"name\", label: \"Name\", type: \"string\" },\n  { key: \"rotation_period\", label: \"Rotation Period\", type: \"string\" },\n  { key: \"orbital_period\", label: \"Orbital Period\", type: \"string\" },\n  { key: \"diameter\", label: \"Diameter\", type: \"string\" },\n  { key: \"climate\", label: \"Сlimate\", type: \"string\" },\n  { key: \"gravity\", label: \"Gravity\", type: \"string\" },\n  { key: \"terrain\", label: \"Terrain\", type: \"string\" },\n  { key: \"surface_water\", label: \"Surface Water\", type: \"string\" },\n];\n","import React, { useCallback, useEffect, useMemo } from \"react\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport Grid from \"components/Grid/Grid\";\nimport Navigation from \"components/Navigation/Navigation\";\nimport { fetchPlanetRequest } from \"store/features/planets/PlanetsActions\";\nimport { Planet } from \"store/features/planets/PlanetsModel\";\nimport { RootStoreState } from \"store/rootModel\";\n\nimport styles from \"./PlanetDetailsPage.module.scss\";\nimport { PLANET_DETAILS_COLUMNS } from \"./PlanetsDetailsPage.const\";\n\ninterface PlanetDetailsRouteProps extends RouteComponentProps<{ id: string }> {}\n\ninterface PlanetDetailsProps extends PlanetDetailsRouteProps {\n  fetchPlanetDetails: () => void;\n  planet: Planet;\n}\n\nfunction PlanetDetailsPage({\n  fetchPlanetDetails,\n  planet,\n  history,\n}: PlanetDetailsProps) {\n  useEffect(() => {\n    if (!planet) {\n      fetchPlanetDetails();\n    }\n  }, [fetchPlanetDetails, planet]);\n\n  const data = useMemo(() => {\n    return planet ? [planet] : [];\n  }, [planet]);\n\n  const goBack = useCallback(() => history.goBack(), [history]);\n\n  return (\n    <div className={styles.container}>\n      <Navigation\n        className={styles.navigation}\n        title={planet ? planet.name : \"Loading...\"}\n        onBack={goBack}\n      />\n      <Grid\n        className={styles.table}\n        columns={PLANET_DETAILS_COLUMNS}\n        data={data}\n      />\n    </div>\n  );\n}\n\nconst mapStateToProps = (\n  state: RootStoreState,\n  ownProps: PlanetDetailsRouteProps\n) => {\n  const id = ownProps.match.params.id;\n  return { planet: state.planets.planetById[id] };\n};\n\nconst mapDispatchToProps = (\n  dispatch: Function,\n  ownProps: PlanetDetailsRouteProps\n) => {\n  const id = ownProps.match.params.id;\n  return {\n    fetchPlanetDetails: () => dispatch(fetchPlanetRequest(id)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlanetDetailsPage);\n","import React, { useCallback } from \"react\";\nimport cn from \"classnames\";\nimport IconButton from \"../IconButton\";\nimport styles from \"./Grid.module.scss\";\nimport { GridAction, GridColumn, GridProps, TableElement } from \"./Grid.types\";\n\nfunction Grid<C extends TableElement>(props: GridProps<C>) {\n  const { columns, className, data, onClick, actions = [] } = props;\n  const hasActions = actions.length > 0;\n  return (\n    <table className={cn(styles.grid, className)}>\n      <thead>\n        <tr className={styles.gridRowHeader}>\n          {columns.map((column) => (\n            <th\n              className={cn(styles.gridColumnHeader, {\n                [styles.gridColumn_alignRight]: column.type === \"number\",\n              })}\n              key={column.key}\n            >\n              {column.label}\n            </th>\n          ))}\n          {hasActions && <th className={styles.gridColumnHeader}>Actions</th>}\n        </tr>\n      </thead>\n      <tbody>\n        {data.map((row) => (\n          <GridItem\n            key={row.id}\n            actions={actions}\n            columns={columns}\n            onClick={onClick}\n            row={row}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\ninterface GridItemProps {\n  onClick?: (id: string) => void;\n  columns: GridColumn[];\n  row: any & {\n    id: string;\n  };\n  actions: GridAction[];\n}\n\nfunction GridItem(props: GridItemProps) {\n  const { row, onClick, columns, actions } = props;\n  const onRowClick = useCallback(() => onClick && onClick(row.id), [\n    row.id,\n    onClick,\n  ]);\n\n  return (\n    <tr\n      className={cn(styles.gridRow, { [styles.gridRow_selectable]: !!onClick })}\n      onClick={onRowClick}\n    >\n      {columns.map((column) => (\n        <td\n          className={cn(styles.gridColumn, {\n            [styles.gridColumn_alignRight]: column.type === \"number\",\n          })}\n          key={column.key}\n        >\n          {row[column.key]}\n        </td>\n      ))}\n      <td className={styles.gridActions}>\n        {actions.map((action) => (\n          <ActionItem\n            key={action.id}\n            Icon={action.Icon}\n            onClick={action.onClick}\n            label={action.label}\n            id={row.id}\n          />\n        ))}\n      </td>\n    </tr>\n  );\n}\n\ninterface ActionItemProps extends GridAction {}\n\nfunction ActionItem(props: ActionItemProps) {\n  const { onClick, id, label, Icon } = props;\n  const onActionClick = useCallback(\n    (event) => {\n      event.stopPropagation();\n      onClick(id);\n    },\n    [id, onClick]\n  );\n  return (\n    <IconButton\n      className={styles.gridActionItem}\n      Icon={Icon}\n      title={label}\n      onClick={onActionClick}\n      invert={true}\n    />\n  );\n}\n\nexport default React.memo(Grid);\n"],"sourceRoot":""}